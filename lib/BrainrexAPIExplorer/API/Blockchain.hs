{-
   Brainrex API Explorer

   Welcome to the Brainrex API explorer, we make analytics tools for crypto and blockchain. Our currently propiertary models offer sentiment analysis, market making, blockchain monitoring and face-id verification. This AI models can be consumed from this API. We also offer integrations to open data and propietary data providers, as well as free test data we collect. There is a collection of data transformation tools. Join our Telegram group to get the latest news and ask questions [https://t.me/brainrex, #brainrex](https://t.me/brainrex). More about Brainrex at [https://brainrex.com](http://brainrex.com). Full Documentation can be found at [https://brainrexapi.github.io/docs](https://brainrexapi.github.io/docs)

   OpenAPI spec version: 2.0
   Brainrex API Explorer API version: 0.1.1
   Contact: support@brainrex.com
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : BrainrexAPIExplorer.API.Blockchain
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module BrainrexAPIExplorer.API.Blockchain where

import BrainrexAPIExplorer.Core
import BrainrexAPIExplorer.MimeTypes
import BrainrexAPIExplorer.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Blockchain

-- *** blockchainAverageTx

-- | @POST \/average_tx_fee@
-- 
-- Calculate average transccion fee of a given blockchain
-- 
-- Calculates the average trasnsaction fee of a given 
-- 
blockchainAverageTx 
  :: (Consumes BlockchainAverageTx MimeJSON, MimeRender MimeJSON Request)
  => Request -- ^ "request" -  Name of the blockchain and date range.
  -> BrainrexAPIExplorerRequest BlockchainAverageTx MimeJSON InlineResponse201 MimeJSON
blockchainAverageTx request =
  _mkRequest "POST" ["/average_tx_fee"]
    `setBodyParam` request

data BlockchainAverageTx 

-- | /Body Param/ "request" - Name of the blockchain and date range.
instance HasBodyParam BlockchainAverageTx Request 

-- | @application/json@
instance Consumes BlockchainAverageTx MimeJSON

-- | @application/json@
instance Produces BlockchainAverageTx MimeJSON


-- *** blockchainList

-- | @GET \/list_blockchain@
-- 
-- The blockchains data structure supported by the Brainrex API
-- 
-- List of supported blockchains networks for analysis. The full history of the networks are available.
-- 
blockchainList 
  :: BrainrexAPIExplorerRequest BlockchainList MimeNoContent [A.Value] MimeJSON
blockchainList =
  _mkRequest "GET" ["/list_blockchain"]

data BlockchainList  

-- | @application/json@
instance Consumes BlockchainList MimeJSON

-- | @application/json@
instance Produces BlockchainList MimeJSON

